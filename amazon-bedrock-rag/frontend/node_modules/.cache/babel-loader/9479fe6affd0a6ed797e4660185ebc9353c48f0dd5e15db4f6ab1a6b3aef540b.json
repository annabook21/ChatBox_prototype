{"ast":null,"code":"var _jsxFileName = \"/Users/annabooker/Downloads/Chatbot_proto/amazon-bedrock-rag/frontend/src/QAHeader.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport Autocomplete from \"@mui/material/Autocomplete\";\nimport { Typography } from \"@mui/material\";\nimport Alert from \"@mui/material/Alert\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport Divider from \"@mui/material/Divider\";\nimport Box from \"@mui/material/Box\";\nimport IconButton from \"@mui/material/IconButton\";\nimport InputIcon from \"@mui/icons-material/Input\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\nimport OutlinedInput from \"@mui/material/OutlinedInput\";\nimport PropTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const QAHeader = props => {\n  _s();\n  var _selectedModel$modelI;\n  const {\n    setSelectedModel,\n    setBaseUrl,\n    modelList,\n    selectedModel,\n    baseUrl\n  } = props;\n  const [url, setUrl] = useState(baseUrl !== null && baseUrl !== void 0 ? baseUrl : \"\");\n  const modelListDisabledText = \"Input a valid base url to enable model selection\";\n  const handleKeyDown = event => {\n    if (event.key === \"Enter\") {\n      setBaseUrl(url);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"overline\",\n      sx: {\n        width: \"100%\",\n        paddingBottom: \"25px\"\n      },\n      children: \"1. Input your base url here:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(OutlinedInput, {\n      id: \"standard-basic\",\n      value: url,\n      sx: {\n        width: \"100%\"\n      },\n      name: \"Base Url\",\n      onChange: event => {\n        var _event$target;\n        return setUrl((_event$target = event.target) === null || _event$target === void 0 ? void 0 : _event$target.value);\n      },\n      onKeyDown: handleKeyDown,\n      placeholder: \"https://example.execute-api.example.amazonaws.com/example/\",\n      endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n        position: \"end\",\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          color: \"primary\",\n          onClick: () => setBaseUrl(url),\n          onMouseDown: () => setBaseUrl(url),\n          children: /*#__PURE__*/_jsxDEV(InputIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"overline\",\n      sx: {\n        width: \"100%\",\n        paddingBottom: \"10px\"\n      },\n      children: \"2. Select a model\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"info\",\n      children: [\"Make sure to check in your AWS console that you have access to the selected model. Note: if no model is selected, the default model used will be anthropic.claude-instant-v1. Check out the list of supported models and regions\", \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"https://docs.aws.amazon.com/bedrock/latest/userguide/knowledge-base-supported.html\",\n        target: \"_blank\",\n        rel: \"noreferrer\",\n        children: \"here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        paddingBottom: \"20px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Tooltip, {\n        title: modelList.length === 0 ? modelListDisabledText : null,\n        children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n          disabled: !baseUrl,\n          includeInputInList: true,\n          id: \"model-select\",\n          autoComplete: true,\n          options: modelList,\n          getOptionLabel: option => {\n            var _option$modelId;\n            return (_option$modelId = option.modelId) !== null && _option$modelId !== void 0 ? _option$modelId : option;\n          },\n          renderOption: (props, option) => /*#__PURE__*/_jsxDEV(Typography, {\n            ...props,\n            variant: \"standard\",\n            children: [option.modelName, \" : \", option.modelId, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this),\n          sx: {\n            width: \"100%\"\n          },\n          renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n            ...params,\n            label: \"Choose a Model\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this),\n          defaultValue: null,\n          value: (_selectedModel$modelI = selectedModel === null || selectedModel === void 0 ? void 0 : selectedModel.modelId) !== null && _selectedModel$modelI !== void 0 ? _selectedModel$modelI : null,\n          onChange: (event, value) => {\n            setSelectedModel(value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(QAHeader, \"lvJu/oU0Tw7KQoRuQIMzrMX2vwM=\");\n_c = QAHeader;\nQAHeader.propTypes = {\n  setSelectedModel: PropTypes.func.isRequired,\n  setBaseUrl: PropTypes.func.isRequired,\n  modelList: PropTypes.array,\n  selectedModel: PropTypes.string,\n  baseUrl: PropTypes.string\n};\nQAHeader.defaultProps = {\n  modelList: [],\n  selectedModel: null,\n  baseUrl: \"\"\n};\nvar _c;\n$RefreshReg$(_c, \"QAHeader\");","map":{"version":3,"names":["useState","TextField","Autocomplete","Typography","Alert","Tooltip","Divider","Box","IconButton","InputIcon","InputAdornment","OutlinedInput","PropTypes","jsxDEV","_jsxDEV","QAHeader","props","_s","_selectedModel$modelI","setSelectedModel","setBaseUrl","modelList","selectedModel","baseUrl","url","setUrl","modelListDisabledText","handleKeyDown","event","key","children","variant","sx","width","paddingBottom","fileName","_jsxFileName","lineNumber","columnNumber","id","value","name","onChange","_event$target","target","onKeyDown","placeholder","endAdornment","position","color","onClick","onMouseDown","severity","href","rel","title","length","disabled","includeInputInList","autoComplete","options","getOptionLabel","option","_option$modelId","modelId","renderOption","modelName","renderInput","params","label","defaultValue","_c","propTypes","func","isRequired","array","string","defaultProps","$RefreshReg$"],"sources":["/Users/annabooker/Downloads/Chatbot_proto/amazon-bedrock-rag/frontend/src/QAHeader.js"],"sourcesContent":["import { useState } from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport Autocomplete from \"@mui/material/Autocomplete\";\nimport { Typography } from \"@mui/material\";\nimport Alert from \"@mui/material/Alert\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport Divider from \"@mui/material/Divider\";\nimport Box from \"@mui/material/Box\";\nimport IconButton from \"@mui/material/IconButton\";\nimport InputIcon from \"@mui/icons-material/Input\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\nimport OutlinedInput from \"@mui/material/OutlinedInput\";\nimport PropTypes from \"prop-types\";\n\nexport const QAHeader = (props) => {\n  const { setSelectedModel, setBaseUrl, modelList, selectedModel, baseUrl } =\n    props;\n  const [url, setUrl] = useState(baseUrl ?? \"\");\n  const modelListDisabledText =\n    \"Input a valid base url to enable model selection\";\n\n  const handleKeyDown = (event) => {\n    if (event.key === \"Enter\") {\n      setBaseUrl(url);\n    }\n  };\n\n  return (\n    <div>\n      <Typography\n        variant=\"overline\"\n        sx={{ width: \"100%\", paddingBottom: \"25px\" }}\n      >\n        1. Input your base url here:\n      </Typography>\n      <OutlinedInput\n        id=\"standard-basic\"\n        value={url}\n        sx={{ width: \"100%\" }}\n        name=\"Base Url\"\n        onChange={(event) => setUrl(event.target?.value)}\n        onKeyDown={handleKeyDown}\n        placeholder=\"https://example.execute-api.example.amazonaws.com/example/\"\n        endAdornment={\n          <InputAdornment position=\"end\">\n            <IconButton\n              color=\"primary\"\n              onClick={() => setBaseUrl(url)}\n              onMouseDown={() => setBaseUrl(url)}\n            >\n              <InputIcon />\n            </IconButton>\n          </InputAdornment>\n        }\n      />\n      <br></br>\n      <br></br>\n      <Divider />\n      <br></br>\n      <Typography\n        variant=\"overline\"\n        sx={{ width: \"100%\", paddingBottom: \"10px\" }}\n      >\n        2. Select a model\n      </Typography>\n      <Alert severity=\"info\">\n        Make sure to check in your AWS console that you have access to the\n        selected model. Note: if no model is selected, the default model used\n        will be anthropic.claude-instant-v1. Check out the list of supported\n        models and regions{\" \"}\n        <a\n          href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/knowledge-base-supported.html\"\n          target=\"_blank\"\n          rel=\"noreferrer\"\n        >\n          here\n        </a>\n      </Alert>\n      <br></br>\n      <Box sx={{ paddingBottom: \"20px\" }}>\n        <Tooltip title={modelList.length === 0 ? modelListDisabledText : null}>\n          <Autocomplete\n            disabled={!baseUrl}\n            includeInputInList\n            id=\"model-select\"\n            autoComplete\n            options={modelList}\n            getOptionLabel={(option) => option.modelId ?? option}\n            renderOption={(props, option) => (\n              <Typography {...props} variant=\"standard\">\n                {option.modelName} : {option.modelId}{\" \"}\n              </Typography>\n            )}\n            sx={{ width: \"100%\" }}\n            renderInput={(params) => (\n              <TextField {...params} label=\"Choose a Model\" />\n            )}\n            defaultValue={null}\n            value={selectedModel?.modelId ?? null}\n            onChange={(event, value) => {\n              setSelectedModel(value);\n            }}\n          />\n        </Tooltip>\n      </Box>\n    </div>\n  );\n};\n\nQAHeader.propTypes = {\n  setSelectedModel: PropTypes.func.isRequired,\n  setBaseUrl: PropTypes.func.isRequired,\n  modelList: PropTypes.array,\n  selectedModel: PropTypes.string,\n  baseUrl: PropTypes.string,\n};\n\nQAHeader.defaultProps = {\n  modelList: [],\n  selectedModel: null,\n  baseUrl: \"\",\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}